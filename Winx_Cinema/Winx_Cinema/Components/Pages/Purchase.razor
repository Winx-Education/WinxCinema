@page "/purchase/{Id}/{row:int}/{number:int}"

@using Winx_Cinema.Shared.Dtos
@using Winx_Cinema.Shared.Entities

@rendermode InteractiveServer

@inject NavigationManager Navigation
@inject IHttpClientFactory HttpClientFactory

<style>
    .purchase-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
        background-color: #f7f7f7;
        padding: 2rem;
    }

    .purchase-card {
        background: #ffffff;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 2rem;
        max-width: 400px;
        width: 100%;
        text-align: center;
    }

        .purchase-card h3 {
            color: #00796b;
            margin-bottom: 1rem;
        }

        .purchase-card p {
            font-size: 1.1rem;
            margin-bottom: 2rem;
        }

    .purchase-button {
        background-color: #00796b;
        color: #ffffff;
        border: none;
        border-radius: 4px;
        padding: 0.75rem 1.5rem;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .purchase-button:hover {
            background-color: #004d40;
        }
</style>

<div class="purchase-container">
    <div class="purchase-card">
        <h3>Purchase Ticket</h3>
        <p>You have selected seat: Row @Row, Seat @Number</p>
        <button class="purchase-button" @onclick="ProceedToPayment">Proceed to Payment</button>
    </div>
</div>

@code {
    [Parameter]
    public int Row { get; set; }

    [Parameter]
    public int Number { get; set; }

    [Parameter]
    public string? Id { get; set; }

    private async Task ProceedToPayment()
    {
        var client = HttpClientFactory.CreateClient("localhost");
        var newTicket = new NewTicketDto
            {
                SitNumber = (this.Row - 1) * 8 + this.Number
            };

        var sessionId = Id;
        var userId = "1b31f4d9-96c3-4f79-9a2a-554e1b95f278";

        var url = $"api/Tickets?sessionId={sessionId}&userId={userId}";
        var response = await client.PostAsJsonAsync(url, newTicket);

        if (response.IsSuccessStatusCode)
        {
            
            var ticket = await response.Content.ReadFromJsonAsync<TicketDto>();
            Navigation.NavigateTo($"/select-seat/{sessionId}");
        }
        else
        {
            var errorMessage = await response.Content.ReadAsStringAsync();
            Console.Error.WriteLine($"Error: {errorMessage}");
        }
    }
}
